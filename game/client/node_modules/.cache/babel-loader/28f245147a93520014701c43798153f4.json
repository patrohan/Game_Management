{"ast":null,"code":"var _jsxFileName = \"/Users/pat/Documents/Web_development/game/client/src/components/layout/test.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('working fine');\n\nclass Test extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Homepage!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s11\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Join match\",\n          onclick: \"joinGame();\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n          src: \"/socket.io/socket.io.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"gameButton\",\n          children: \"Join Match1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-flat waves-effect\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:4000/matchmaking\",\n            children: \"Matchmaking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s11\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-flat waves-effect\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:4000/logout\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction joinGame() {\n  /*#__PURE__*/\n  _jsxDEV(\"script\", {\n    src: \"/socket.io/socket.io.js\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n\n  var socket = io();\n  var label = document.getElementById('label');\n  var input = document.getElementById('input');\n  socket.on('roomcount', function (count, gameId) {\n    // const room = io.sockets.adapter.rooms.get(gameId);\n    // const nop = room ? room.size : 0;\n    console.log('in joinroom of client. players are ' + count);\n    var item = document.createElement('div');\n\n    if (count == 1) {\n      alert(\"Waiting for a player to match\"); //input.value = 'Waiting for a player to match';\n    } else if (count == 2) {\n      alert(\"Match found! Let's play!\"); //input.value = 'Match found! Lets play';\n\n      console.log(\"room id updated to \" + gameId);\n      setTimeout(function () {\n        playMatch(gameId);\n      }, 6000);\n    }\n  });\n  socket.on('matchend', function (msg, gameId) {\n    alert(msg);\n    const gameId1 = gameId; //socket.emit('closesocket', gameId1)\n  });\n\n  function endMatch(gameId) {//add entry to db and disconnect socket\n  }\n\n  function playMatch(gameId) {\n    //take gameID of sockets, use random function and emit to server. In server use on func and route one to win and other to lose\n    socket.emit('matchplayed', gameId);\n  }\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/pat/Documents/Web_development/game/client/src/components/layout/test.js"],"names":["React","Component","console","log","Test","render","joinGame","socket","io","label","document","getElementById","input","on","count","gameId","item","createElement","alert","setTimeout","playMatch","msg","gameId1","endMatch","emit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACAC,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEJ;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC,YAA3B;AAAwC,UAAA,OAAO,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEM;AAAQ,UAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFN,eAGI;AAAQ,UAAA,EAAE,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAAA,iCAA0C;AAAG,YAAA,IAAI,EAAC,mCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFI,eAQJ;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAAA,iCAA0C;AAAG,YAAA,IAAI,EAAC,8BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARI;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcD;;AAhB0B;;AAmB7B,SAASC,QAAT,GAAmB;AACf;AAAA;AAAQ,IAAA,GAAG,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;;AACI,MAAIC,MAAM,GAAGC,EAAE,EAAf;AACA,MAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AACA,MAAIC,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAZ;AAEAJ,EAAAA,MAAM,CAACM,EAAP,CAAU,WAAV,EAAuB,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAC5C;AACA;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCW,KAApD;AACA,QAAIE,IAAI,GAAGN,QAAQ,CAACO,aAAT,CAAuB,KAAvB,CAAX;;AACA,QAAGH,KAAK,IAAI,CAAZ,EAAc;AACVI,MAAAA,KAAK,CAAC,+BAAD,CAAL,CADU,CAEV;AACH,KAHD,MAGM,IAAGJ,KAAK,IAAG,CAAX,EAAa;AACfI,MAAAA,KAAK,CAAC,0BAAD,CAAL,CADe,CAEf;;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBY,MAApC;AACAI,MAAAA,UAAU,CAAC,YAAW;AAAEC,QAAAA,SAAS,CAACL,MAAD,CAAT;AAAoB,OAAlC,EAAoC,IAApC,CAAV;AACH;AACJ,GAdD;AAeAR,EAAAA,MAAM,CAACM,EAAP,CAAU,UAAV,EAAsB,UAASQ,GAAT,EAAcN,MAAd,EAAqB;AACvCG,IAAAA,KAAK,CAACG,GAAD,CAAL;AACA,UAAMC,OAAO,GAAGP,MAAhB,CAFuC,CAGvC;AACH,GAJD;;AAKA,WAASQ,QAAT,CAAkBR,MAAlB,EAAyB,CACrB;AACH;;AACD,WAASK,SAAT,CAAmBL,MAAnB,EAA0B;AACtB;AACAR,IAAAA,MAAM,CAACiB,IAAP,CAAY,aAAZ,EAA2BT,MAA3B;AACH;AACR;;AAED,eAAeX,IAAf","sourcesContent":["import React, { Component } from \"react\";\nconsole.log('working fine')\nclass Test extends Component {\n  render() {\n    return (\n        <div>\n            <h1>Welcome to Homepage!!</h1>\n    <div className=\"col s11\">\n        <input type=\"submit\" value=\"Join match\" onclick=\"joinGame();\" />\n          <script src=\"/socket.io/socket.io.js\"></script>\n        <button id=\"gameButton\">Join Match1</button>\n        <button className=\"btn-flat waves-effect\"><a href=\"http://localhost:4000/matchmaking\">Matchmaking</a></button>\n    </div>\n    <div className=\"col s11\">\n        <button className=\"btn-flat waves-effect\"><a href=\"http://localhost:4000/logout\">Logout</a></button>\n    </div>\n        </div>\n    )\n  }\n}\n\nfunction joinGame(){\n    <script src=\"/socket.io/socket.io.js\"></script>\n        var socket = io();\n        var label = document.getElementById('label');\n        var input = document.getElementById('input');\n\n        socket.on('roomcount', function (count, gameId) {\n            // const room = io.sockets.adapter.rooms.get(gameId);\n            // const nop = room ? room.size : 0;\n            console.log('in joinroom of client. players are ' + count)\n            var item = document.createElement('div');\n            if(count == 1){\n                alert(\"Waiting for a player to match\")\n                //input.value = 'Waiting for a player to match';\n            }else if(count ==2){\n                alert(\"Match found! Let's play!\")\n                //input.value = 'Match found! Lets play';\n                console.log(\"room id updated to \" + gameId)\n                setTimeout(function() { playMatch(gameId); }, 6000)\n            }\n        });\n        socket.on('matchend', function(msg, gameId){\n            alert(msg)\n            const gameId1 = gameId;\n            //socket.emit('closesocket', gameId1)\n        })\n        function endMatch(gameId){\n            //add entry to db and disconnect socket\n        }\n        function playMatch(gameId){\n            //take gameID of sockets, use random function and emit to server. In server use on func and route one to win and other to lose\n            socket.emit('matchplayed', gameId)\n        }\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}