{"ast":null,"code":"var _jsxFileName = \"/Users/pat/Documents/Web_development/game/client/src/components/layout/Match.js\";\nimport React, { Component } from \"react\";\nimport matchmaker from \"simple-matchmaker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar io;\nvar gameSocket;\nvar gameid = 1;\n\nconst notify = result => {\n  console.log(result);\n  gameid++;\n};\n\nfunction playerJoinGame(data) {\n  //console.log('Player ' + data.playerName + 'attempting to join game: ' + data.gameId );\n  // A reference to the player's Socket.IO socket object\n  var sock = this; // Look up the room ID in the Socket.IO manager object.\n\n  var room = gameSocket.manager.rooms[\"/\" + data.gameId]; // If the room exists...\n\n  if (room != undefined) {\n    // attach the socket id to the data object.\n    data.mySocketId = sock.id; // Join the room\n\n    sock.join(data.gameId); //console.log('Player ' + data.playerName + ' joining game: ' + data.gameId );\n    // Emit an event notifying the clients that the player has joined the room.\n\n    io.sockets.in(data.gameId).emit('playerJoinedRoom', data);\n  } else {\n    // Otherwise, send an error message back to the player.\n    this.emit('error', {\n      message: \"This room does not exist.\"\n    });\n  }\n}\n\nclass Match extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = e => {\n      console.log(\"In Submit button\");\n      e.preventDefault(); //addPlayer()\n      //add this player to matchmakers queue\n\n      const data = {\n        name: this.state.name,\n        gameid: gameid\n      };\n      console.log(data);\n      matchmaker.fifomatch.addPlayer(data.name, notify);\n      playerJoinGame(data);\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.state = {\n      name: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Welcome to Game arena\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field col s12\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onChange,\n          id: \"name\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-flat waves-effect\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n        onClick: this.onSubmit,\n        children: \"Add Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction addPlayer() {\n  matchmaker.fifomatch.addPlayer('Alessio', notify);\n  matchmaker.fifomatch.addPlayer('John', notify);\n}\n\nexport default Match;","map":{"version":3,"sources":["/Users/pat/Documents/Web_development/game/client/src/components/layout/Match.js"],"names":["React","Component","matchmaker","io","gameSocket","gameid","notify","result","console","log","playerJoinGame","data","sock","room","manager","rooms","gameId","undefined","mySocketId","id","join","sockets","in","emit","message","Match","constructor","onSubmit","e","preventDefault","name","state","fifomatch","addPlayer","onChange","setState","target","value","render","width","borderRadius","letterSpacing","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport matchmaker from \"simple-matchmaker\";\n\nvar io;\nvar gameSocket;\nvar gameid = 1;\n\nconst notify = (result) => { \n  console.log(result);\n  gameid++;\n};\n\nfunction playerJoinGame(data) {\n    //console.log('Player ' + data.playerName + 'attempting to join game: ' + data.gameId );\n\n    // A reference to the player's Socket.IO socket object\n    var sock = this;\n\n    // Look up the room ID in the Socket.IO manager object.\n    var room = gameSocket.manager.rooms[\"/\" + data.gameId];\n\n    // If the room exists...\n    if( room != undefined ){\n        // attach the socket id to the data object.\n        data.mySocketId = sock.id;\n\n        // Join the room\n        sock.join(data.gameId);\n\n        //console.log('Player ' + data.playerName + ' joining game: ' + data.gameId );\n\n        // Emit an event notifying the clients that the player has joined the room.\n        io.sockets.in(data.gameId).emit('playerJoinedRoom', data);\n\n    } else {\n        // Otherwise, send an error message back to the player.\n        this.emit('error',{message: \"This room does not exist.\"} );\n    }\n}\n\nclass Match extends Component {\n    constructor() {\n        super();\n        this.state = {\n          name: \"\"\n        }\n    }\n    onSubmit = e => {\n        console.log(\"In Submit button\")\n        e.preventDefault();\n        //addPlayer()\n        //add this player to matchmakers queue\n        const data= {\n            name : this.state.name,\n            gameid : gameid\n        };\n        console.log(data)\n        matchmaker.fifomatch.addPlayer(data.name, notify)\n        playerJoinGame(data)\n    }\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n       };\n  render() {\n    return (\n        <div>\n            Welcome to Game arena\n            <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  id=\"name\"\n                  type=\"text\"\n                />\n                <label htmlFor=\"name\">Name</label>\n              </div>\n            <button className=\"btn-flat waves-effect\"><a href=\"/\">Back to Home</a></button>\n            <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  onClick={this.onSubmit}\n                >\n                  Add Player\n                </button>\n        </div>\n        \n    )\n  }\n}\n\nfunction addPlayer(){\n    matchmaker.fifomatch.addPlayer('Alessio',notify);\n    matchmaker.fifomatch.addPlayer('John',notify);\n}\n\nexport default Match;"]},"metadata":{},"sourceType":"module"}