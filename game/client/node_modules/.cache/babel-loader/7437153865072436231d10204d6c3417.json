{"ast":null,"code":"var _jsxFileName = \"/Users/pat/Documents/Web_development/game/client/src/components/layout/test.js\";\nimport React, { Component } from \"react\";\nimport { Socket } from \"socket.io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('working fine');\n\nclass Test extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Homepage!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s11\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Join match\",\n          onClick: \"joinGame();\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"gameButton\",\n          children: \"Join Match1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-flat waves-effect\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:4000/matchmaking\",\n            children: \"Matchmaking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            width: \"150px\",\n            borderRadius: \"3px\",\n            letterSpacing: \"1.5px\",\n            marginTop: \"1rem\"\n          },\n          type: \"submit\",\n          className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n          onClick: this.onSubmit,\n          children: \"Play Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col s11\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-flat waves-effect\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://localhost:4000/logout\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this);\n  }\n\n  onSubmit() {\n    console.log('inside function');\n    var roomID1 = 1;\n    Socket.emit('joinroom', roomID1);\n    var label = document.getElementById('label');\n    var input = document.getElementById('input');\n    Socket.on('roomcount', function (count, gameId) {\n      // const room = io.sockets.adapter.rooms.get(gameId);\n      // const nop = room ? room.size : 0;\n      console.log('in joinroom of client. players are ' + count);\n      var item = document.createElement('div');\n\n      if (count == 1) {\n        alert(\"Waiting for a player to match\"); //input.value = 'Waiting for a player to match';\n      } else if (count == 2) {\n        alert(\"Match found! Let's play!\"); //input.value = 'Match found! Lets play';\n\n        console.log(\"room id updated to \" + gameId);\n        setTimeout(function () {\n          playMatch(gameId);\n        }, 6000);\n      }\n    });\n    Socket.on('matchend', function (msg, gameId) {\n      alert(msg);\n      const gameId1 = gameId; //socket.emit('closesocket', gameId1)\n    });\n\n    function endMatch(gameId) {//add entry to db and disconnect socket\n    }\n\n    function playMatch(gameId) {\n      //take gameID of sockets, use random function and emit to server. In server use on func and route one to win and other to lose\n      socket.emit('matchplayed', gameId);\n    }\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/pat/Documents/Web_development/game/client/src/components/layout/test.js"],"names":["React","Component","Socket","console","log","Test","render","paddingLeft","width","borderRadius","letterSpacing","marginTop","onSubmit","roomID1","emit","label","document","getElementById","input","on","count","gameId","item","createElement","alert","setTimeout","playMatch","msg","gameId1","endMatch","socket"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Socket } from \"socket.io\";\nconsole.log('working fine')\nclass Test extends Component {\n  render() {\n    return (\n        <div>\n            <h1>Welcome to Homepage!!</h1>\n    <div className=\"col s11\">\n        <input type=\"submit\" value=\"Join match\" onClick=\"joinGame();\" />\n        <button id=\"gameButton\">Join Match1</button>\n        <button className=\"btn-flat waves-effect\"><a href=\"http://localhost:4000/matchmaking\">Matchmaking</a></button>\n    </div>\n    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  onClick={this.onSubmit}\n                >\n                  Play Game\n                </button>\n              </div>\n    <div className=\"col s11\">\n        <button className=\"btn-flat waves-effect\"><a href=\"http://localhost:4000/logout\">Logout</a></button>\n    </div>\n        </div>\n    )\n  }\n\nonSubmit(){\n    console.log('inside function')\n    var roomID1 = 1;\n    Socket.emit('joinroom', roomID1);\n\n        var label = document.getElementById('label');\n        var input = document.getElementById('input');\n        Socket.on('roomcount', function (count, gameId) {\n            // const room = io.sockets.adapter.rooms.get(gameId);\n            // const nop = room ? room.size : 0;\n            console.log('in joinroom of client. players are ' + count)\n            var item = document.createElement('div');\n            if(count == 1){\n                alert(\"Waiting for a player to match\")\n                //input.value = 'Waiting for a player to match';\n            }else if(count ==2){\n                alert(\"Match found! Let's play!\")\n                //input.value = 'Match found! Lets play';\n                console.log(\"room id updated to \" + gameId)\n                setTimeout(function() { playMatch(gameId); }, 6000)\n            }\n        });\n        Socket.on('matchend', function(msg, gameId){\n            alert(msg)\n            const gameId1 = gameId;\n            //socket.emit('closesocket', gameId1)\n        })\n        function endMatch(gameId){\n            //add entry to db and disconnect socket\n        }\n        function playMatch(gameId){\n            //take gameID of sockets, use random function and emit to server. In server use on func and route one to win and other to lose\n            socket.emit('matchplayed', gameId)\n        }\n}\n\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}